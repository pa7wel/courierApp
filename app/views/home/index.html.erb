<!DOCTYPE html>
<html>
  <head>
    <title>Distance Matrix service</title>

  </head>
  <body>
    <p><%= @test %></p>
    
    <button class="sentToSidekiq" onclick="sentToSidekiq()">SENT TO SAVE</button>
    <div id="right-panel">
      <div id="inputs">
      </div>
      <div>
        <strong>Results</strong>
      </div>
      <div id="output"></div>
    </div>
    <div id="map"></div>
    <script>
      function initMap() {
            
        var bounds = new google.maps.LatLngBounds;
        var markersArray = [];

        var originTable = ['Sanok','Krakow','Rzeszow','Krosno','Jaslo'];

        var destinationIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=D|FF0000|000000';
        var originIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=O|FFFF00|000000';
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 55.53, lng: 9.4},
          zoom: 10
        });
        var geocoder = new google.maps.Geocoder;

        var service = new google.maps.DistanceMatrixService;
        service.getDistanceMatrix({
          origins: originTable,
          destinations: originTable,
          travelMode: 'DRIVING',
          unitSystem: google.maps.UnitSystem.METRIC,
          avoidHighways: false,
          avoidTolls: false
        }, function(response, status) {
          if (status !== 'OK') {
            alert('Error was: ' + status);
          } else {
            var originList = response.originAddresses;
            console.log('originList', originList);
            console.log('response: ', response);
            var destinationList = response.destinationAddresses;
            var outputDiv = document.getElementById('output');
            outputDiv.innerHTML = '';
            deleteMarkers(markersArray);

            // parsowanie JSON do wysylki do sidekiq


            var showGeocodedAddressOnMap = function(asDestination) {
              var icon = asDestination ? destinationIcon : originIcon;
              return function(results, status) {
                if (status === 'OK') {
                  map.fitBounds(bounds.extend(results[0].geometry.location));
                  markersArray.push(new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location,
                    icon: icon
                  }));
                } else {
                  alert('Geocode was not successful due to: ' + status);
                }
              };
            };

            for (var i = 0; i < originList.length; i++) {
              var results = response.rows[i].elements;
              geocoder.geocode({'address': originList[i]},
                  showGeocodedAddressOnMap(false));
              for (var j = 0; j < results.length; j++) {
                geocoder.geocode({'address': destinationList[j]},
                    showGeocodedAddressOnMap(true));
                outputDiv.innerHTML += originList[i] + ' to ' + destinationList[j] +
                    ': ' + results[j].distance.text + ' in ' +
                    results[j].duration.text + '<br>';
              }
            }
          }
        });
      }

      function deleteMarkers(markersArray) {
        for (var i = 0; i < markersArray.length; i++) {
          markersArray[i].setMap(null);
        }
        markersArray = [];
      }

      function sentToSidekiq() {
        var dataJSON = {
              cities: ['Sanok', 'Krakow', 'Rzeszow','Krosno', 'Jaslo'],
              distances: [{
                origin: "Sanok",
                destination: "Sanok",
                distance: 0
              },
              {
                origin: "Sanok",
                destination: "Krakow",
                distance: 170
              },
              {
                origin: "Sanok",
                destination: "Rzeszow",
                distance: 80
              },
              {
                origin: "Sanok",
                destination: "Krosno",
                distance: 30
              },
              {
                origin: "Sanok",
                destination: "Jaslo",
                distance: 50
              },
              {
                origin: "Krakow",
                destination: "Sanok",
                distance: 170
              },
              {
                origin: "Krakow",
                destination: "Krakow",
                distance: 0
              },
              {
                origin: "Krakow",
                destination: "Rzeszow",
                distance: 160
              },
              {
                origin: "Krakow",
                destination: "Krosno",
                distance: 140
              },
              {
                origin: "Krakow",
                destination: "Jaslo",
                distance: 120
              },
              {
                origin: "Rzeszow",
                destination: "Sanok",
                distance: 80
              },
              {
                origin: "Rzeszow",
                destination: "Krakow",
                distance: 160
              },
              {
                origin: "Rzeszow",
                destination: "Rzeszow",
                distance: 0
              },
              {
                origin: "Rzeszow",
                destination: "Krosno",
                distance: 60
              },
              {
                origin: "Rzeszow",
                destination: "Jaslo",
                distance: 70
              },
              {
                origin: "Krosno",
                destination: "Sanok",
                distance: 50
              },
              {
                origin: "Krosno",
                destination: "Krakow",
                distance: 140
              },
              {
                origin: "Krosno",
                destination: "Rzeszow",
                distance: 60
              },
              {
                origin: "Krosno",
                destination: "Krosno",
                distance: 0
              },
              {
                origin: "Krosno",
                destination: "Jaslo",
                distance: 20
              },
              {
                origin: "Jaslo",
                destination: "Sanok",
                distance: 50
              },
              {
                origin: "Jaslo",
                destination: "Krakow",
                distance: 120
              },
              {
                origin: "Jaslo",
                destination: "Rzeszow",
                distance: 70
              },
              {
                origin: "Jaslo",
                destination: "Krosno",
                distance: 20
              },
              {
                origin: "Jaslo",
                destination: "Jaslo",
                distance: 0
              },
             ]
            };


    console.log('test json to sent:', dataJSON);

    function output(msg) { console.log(msg) }
    function jobFinished(jobResult) {
      console.log(jobResult);
    }

    function pollJob(jobId, successCallback) {
      function poll() {
        var pollEvery = 1000; // milliseconds
        $.ajax({
          type: "GET",
          url: "/home/fetch/" + jobId, // coupled to your app's routes
          dataType: 'text',
          statusCode: {
            200: function(data) { successCallback(data); },
            202: function(data) { setTimeout(poll, pollEvery); },
            500: function(data) { output('Error!'); }
          }
        });
      };
      poll();
    }

    output('Creating...');

    $.ajax({
      type: "POST",
      url: "/home/create",
      data: dataJSON,
      dataType: 'json',
      success: function(data) {
        output('Job queued, waiting...');
        pollJob(data.jobId, jobFinished);
      }
    });

      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDnOy5ShOWWkeOp26Ez_fz5K4yM6Zr5Br8&callback=initMap">
    </script>
  </body>
</html>